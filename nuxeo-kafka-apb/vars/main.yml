---

# Variables to hold lookup functions
users_secret_lookup: "{{ lookup('k8s', kind='Secret', namespace=namespace, resource_name=users_secret_name) }}"
ca_secret_lookup: "{{ lookup('k8s', kind='Secret', namespace=namespace, resource_name=ca_secret_name) }}"
init_configmap_lookup: "{{ lookup('k8s', kind='ConfigMap', namespace=namespace, resource_name=init_configmap_name) }}"
poddisruptionbudget_lookup: "{{ lookup('k8s', api_version='v1beta1', kind='PodDisruptionBudget', namespace=namespace, resource_name=name) }}"
statefulset_lookup: "{{ lookup('k8s', kind='StatefulSet', namespace=namespace, resource_name=name) }}"
service_lookup: "{{ lookup('k8s', kind='Service', namespace=namespace, resource_name=name) }}"
headless_service_lookup: "{{ lookup('k8s', kind='Service', namespace=namespace, resource_name=name+'-headless') }}"
kafka_serviceaccount_lookup: "{{ lookup('k8s', kind='ServiceAccount', namespace=namespace, resource_name=kafka_serviceaccount_name) }}"
password_lookup: "{{ lookup('password', '/dev/null') }}"
tls_cacert_lookup: "{{ lookup('file', tls_cacert_path) }}"

zookeeper_statefulset_lookup: "{{ lookup('k8s', kind='StatefulSet', namespace=namespace, resource_name=zookeeper_name) }}"
zookeeper_service_lookup: "{{ lookup('openshift', kind='Service', namespace=namespace, resource_name=zookeeper_name) }}"
zookeeper_service_headless_lookup: "{{ lookup('openshift', kind='Service', namespace=namespace, resource_name=zookeeper_name+'-headless') }}"

# Variables to hold queries
ready_replicas_query: "[spec.replicas, status.ready_replicas]"
statefulset_query: "{{ statefulset_lookup | json_query(ready_replicas_query) | unique | count == 1 }}"
zookeeper_statefulset_query: "{{ zookeeper_statefulset_lookup | json_query(ready_replicas_query) | unique | count == 1 }}"

# Whether we are in a cluster or not.
pod_name: "{{ lookup('env', 'POD_NAME') }}"
pod_namespace: "{{ lookup('env', 'POD_NAMESPACE') }}"
in_cluster: "{{ True if (pod_name and pod_namespace) else False }}"

name: "{{ app_name if app_name is defined else 'nuxeo-kafka-' + (_apb_service_instance_id | string |truncate(5, True, '') ) }}"
zookeeper_name: "{{ ( app_name | replace('kafka','zookeeper')) if app_name is defined else 'nuxeo-zookeeper-' + (_apb_service_instance_id | string |truncate(5, True, '') ) }}"


# Variables to hold resource names
users_secret_name: "{{ name + '-user' if auth_existingUserSecret is undefined else auth_existingUserSecret }}"
ca_secret_name: "{{ name + '-ca' }}"
init_configmap_name: "{{ name + '-init'}}"
admin_password: "{{ password_lookup if auth_adminPassword is undefined else auth_adminPassword }}"
tls_enabled: "{{ True if _apb_plan_id == 'secure-clustered' else False }}"
auth_enabled: "{{ True if _apb_plan_id == 'secure-clustered' else False }}"
persistentVolume_enabled: "{{ True }}"
kafka_serviceaccount_name: "{{ name }}"

# Variable to hold list of Statefulset PersistentVolumeClaims
statefulset_pvcs: []
zookeeper_statefulset_pvcs: []