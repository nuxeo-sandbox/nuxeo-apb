apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ minio_dc_name }}
  namespace: {{ namespace }}
  labels:
    apb_name: '{{ apb_name }}'
    apb_plan_id: '{{ _apb_plan_id }}'
    apb_service_class_id: '{{ _apb_service_class_id }}'
    apb_service_instance_id: '{{ _apb_service_instance_id }}'
    app: {{ app_name }}
spec:
  replicas: 1
  selector:
    app: {{ app_name }}
    component: minio
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ app_name }}
        component: minio
{% if podAnnotations is defined and (podAnnotations | from_yaml) %}
      annotations:
{{ podAnnotations | from_yaml | to_nice_yaml(indent=2) | indent(8, true) }}
{% endif %}
    spec:
{% if securityContext is defined and (securityContext | from_yaml) %}
      securityContext:
{{ securityContext | from_yaml | to_nice_yaml(indent=2) | indent(8, true) }}
{% endif %}
      containers:
        - name: minio
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ minio_secret_name }}
                  key: access_key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ minio_secret_name }}
                  key: secret_access_key
          args:
          - server
          - /storage
          ports:
          - containerPort: 9000
          image: {{ minio_image }}:{{ minio_image_version }}
          imagePullPolicy: "{{ image_pullPolicy }}"
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /minio/health/ready
              port: 9000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /minio/health/live
              port: 9000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {{ resources }}
          volumeMounts:
            - mountPath: /storage
              name: storage
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: {{ minio_pvc_name }}
  triggers:
    - type: ConfigChange
