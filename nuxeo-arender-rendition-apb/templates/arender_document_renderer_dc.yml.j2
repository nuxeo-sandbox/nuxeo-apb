---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ arender_document_renderer_dc_name }}
  namespace: {{ namespace }}
  labels:
    apb_name: '{{ apb_name }}'
    apb_plan_id: '{{ _apb_plan_id }}'
    apb_service_class_id: '{{ _apb_service_class_id }}'
    apb_service_instance_id: '{{ _apb_service_instance_id }}'
    app: {{ app_name }}
spec:
  replicas: 1
  selector:
    app: {{ app_name }}
    role: rendition-document-renderer
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ app_name }}
        role: rendition-document-renderer
{% if rendition_podAnnotations is defined and (rendition_podAnnotations | from_yaml) %}
      annotations:
{{ rendition_podAnnotations | from_yaml | to_nice_yaml(indent=2) | indent(8, true) }}
{% endif %}
    spec:
      serviceAccountName: {{ arender_rendition_serviceaccount_name }}
{% if rendition_securityContext is defined and (rendition_securityContext | from_yaml) %}
      rendition_securityContext:
{{ rendition_securityContext | from_yaml | to_nice_yaml(indent=2) | indent(8, true) }}
{% endif %}
{% if use_pull_secret %}
      imagePullSecrets:
        - name: {{ arender_rendition_image_pull_secret }}
{% endif %}
      initContainers:
        - name: init-create-log-dir
          image: busybox
          command: ['mkdir', '-m', '770', '-p', '/logs/arender-document-renderer']
          volumeMounts:
          - name: logs
            mountPath: /logs
      containers:
        - command:
            - sh
            - ./entrypoint.sh
            - java
            - '-Dsun.net.inetaddr.ttl=0'
            - '-Djava.library.path=/lib/'
            - '-jar'
            - '-Xmx1g'
            - app.jar
          image: {{ arender_document_renderer_image }}
          imagePullPolicy: {{ arender_document_renderer_image_pullPolicy }}
          name: arender-document-renderer
          readinessProbe:
            failureThreshold: {{ arender_document_renderer_readiness_probe_failure_threshold }}
            httpGet:
              path: {{ arender_document_renderer_readiness_probe_path }}
              port: {{ arender_document_renderer_internal_port }}
              scheme: HTTP
            initialDelaySeconds: {{ arender_document_renderer_readiness_probe_initial_delay_secs }}
            periodSeconds: {{ arender_document_renderer_readiness_probe_period_seconds }}
            successThreshold: {{ arender_document_renderer_readiness_probe_success_threshold }}
            timeoutSeconds: {{ arender_document_renderer_readiness_probe_timeout_seconds }}
          livenessProbe:
            httpGet:
              path: {{ arender_document_renderer_liveness_probe_path }}
              port: {{ arender_document_renderer_internal_port }}
            initialDelaySeconds: {{ arender_document_renderer_liveness_probe_initial_delay_secs }}
            periodSeconds: {{ arender_document_renderer_liveness_probe_period_seconds }}
            successThreshold: {{ arender_document_renderer_liveness_probe_success_threshold }}
            timeoutSeconds: {{ arender_document_renderer_liveness_probe_timeout_seconds }}
          env:
          - name: DRN_EUREKA_INSTANCE_HOSTNAME
            value: {{ arender_document_service_broker_service_name }}
          - name: DRN_EUREKA_SERVER_PORT
            value: "{{ arender_document_service_broker_internal_port }}"
          - name: DRN_EUREKA_INSTANCE_METADATA.MAP_HOST.NAME
            value: {{ arender_document_renderer_service_name }}
          - name: DRN_LOGGING_CONFIG
            value: "/arender/modules/document-renderer/config/logback-spring.xml"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          resources:
{% if arender_document_renderer_resources is defined and (arender_document_renderer_resources | from_yaml) %}
{{ arender_document_renderer_resources | from_yaml | to_nice_yaml(indent=2) | indent(12, true) }}
{% endif %}
          volumeMounts:
          - name: temp
            mountPath: /arender/tmp
          - name: config
            mountPath: /arender/modules/document-renderer/config
          - name: logs
            mountPath: /logs
      volumes:
        - name: temp
          persistentVolumeClaim:
            claimName: {{ arender_common_tmp_name }}
        - name: config
          configMap:
            name: {{ arender_document_renderer_log_configmap_name }}
        - name: logs
          persistentVolumeClaim:
            claimName: {{ arender_logs_pvc_name }}
  triggers:
    - type: ConfigChange
