---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ arender_previewer_dc_name }}
  namespace: {{ namespace }}
  labels:
    apb_name: '{{ apb_name }}'
    apb_plan_id: '{{ _apb_plan_id }}'
    apb_service_class_id: '{{ _apb_service_class_id }}'
    apb_service_instance_id: '{{ _apb_service_instance_id }}'
    app: {{ app_name }}
spec:
  replicas: 1
  selector:
    app: {{ app_name }}
    role: arender-previewer
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ app_name }}
        role: arender-previewer
{% if previewer_podAnnotations is defined and (previewer_podAnnotations | from_yaml) %}
      annotations:
{{ previewer_podAnnotations | from_yaml | to_nice_yaml(indent=2) | indent(8, true) }}
{% endif %}
    spec:
{% if previewer_securityContext is defined and (previewer_securityContext | from_yaml) %}
      previewer_securityContext:
{{ previewer_securityContext | from_yaml | to_nice_yaml(indent=2) | indent(8, true) }}
{% endif %}
      containers:
        - image: {{ arender_previewer_image }}:{{ arender_previewer_image_version }}
          imagePullPolicy: {{ previewer_image_pullPolicy }}
          name: arender-previewer
          readinessProbe:
            failureThreshold: 4
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 4
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          env:
            - name: ARENDERSRV_ARENDER_SERVER_RENDITION_HOSTS
              valueFrom:
                secretKeyRef:
                  name: {{ arender_binding_secret_name }}
                  key: broker_service_url
            - name: nuxeoUrlEnv
              value: {{ previewer_nuxeo_url }}
            - name: ARENDERSRV_NUXEO_CLIENT_TIMEOUT
              value: {{ previewer_nuxeo_client_timeout }}
            - name: nuxeoArenderSecretEnv
              value: {{ previewer_nuxeo_oauth_secret }}
          resources:
{% if previewer_resources is defined and (previewer_resources | from_yaml) %}
{{ previewer_resources | from_yaml | to_nice_yaml(indent=2) | indent(12, true) }}
{% endif %}
          volumeMounts:
          - name: logs
            mountPath: /usr/local/tomcat/logs
          - name: tmp
            mountPath: /usr/local/tomcat/temp
          - name: work
            mountPath: /usr/local/tomcat/work
      imagePullSecrets:
        - name: {{ arender_previewer_image_pull_secret }}
      initContainers:
        - name: init-rendition-broker
          image: busybox
          env:
            - name: BROKER_SERVICE_DNS
              valueFrom:
                secretKeyRef:
                  name: {{ arender_binding_secret_name }}
                  key: broker_service_dns
            - name: BROKER_SERVICE_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ arender_binding_secret_name }}
                  key: broker_service_port

          command: ['sh', '-c', 'until nc -w1 $BROKER_SERVICE_DNS $BROKER_SERVICE_PORT; do echo "waiting for rendition"; sleep 5; done;']
      volumes:
        - name: logs
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: work
          emptyDir: {}
  triggers:
    - type: ConfigChange
